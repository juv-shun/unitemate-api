service: unitemate-api
frameworkVersion: "3"

provider:
  name: aws
  endpointType: REGIONAL
  runtime: python3.9
  region: ap-northeast-1
  stackName: ${sls:stage}-${self:service}-stack
  deploymentBucket:
    name: ${ssm:/${self:service}/sls-deployment-bucket}
    maxPreviousDeploymentArtifacts: 3
  logRetentionInDays: 7
  apiGateway:
    apiKeys:
      - defaultKey-${sls:stage}
  iam:
    role:
      name: ${self:service}-role-${sls:stage}
      statements:
        - Effect: Allow
          Action:
            - timestream:DescribeEndpoints
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - timestream:*
          Resource:
            - !GetAtt UnitemateTimeStreamDB.Arn
            - !Join ["", [!GetAtt UnitemateTimeStreamDB.Arn, "/*"]]
        - Effect: Allow
          Action:
            - s3:*
          Resource:
            - !GetAtt UnitemateS3Bucket.Arn
            - !Join ["", [!GetAtt UnitemateS3Bucket.Arn, "/*"]]
  environment:
    TIMESTREAM_DB_NAME: !Ref UnitemateTimeStreamDB
    ORIGIN_TABLE: origin_user_results-${sls:stage} # !GetAtt UnitemateTimeStreamUserResultTable.Name
    AGGREGATION_RESULT_TABLE: aggregation-result-${sls:stage} # !GetAtt UnitemateTimeStreamAggregationResultTable.Name
    EXPORT_GCS_BUCKET: looker_studio_data_sources-${sls:stage}

package:
  individually: true
  patterns:
    - "!**"
    - src/**
    - pyproject.toml
    - poetry.lock

functions:
  match_user_result:
    name: ${self:service}-user-result-${sls:stage}
    handler: src.api.handler.user_result
    description: API Gatewayからリクエストを受信してTimeStream DBに格納する関数
    events:
      - http:
          path: v1/match/user_result
          method: post
          private: true
  csv_export_aggregation:
    name: ${self:service}-csv-export-aggregation-${sls:stage}
    handler: src.csv_export.handler.aggregate
    description: スケジュールクエリで集計された結果をGCSにCSVエクスポートする関数
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: src/csv_export/clientLibraryConfig.json
      GOOGLE_CLOUD_PROJECT: ${self:service}
    events:
      - schedule:
          name: ${self:service}-aggregation-export-time-${sls:stage}
          description: Aggregation CSV Export Batch Event for ${self:service}
          rate: cron(40 0 * * ? *)
          enabled: ${param:schedule_enabled}

plugins:
  - serverless-prune-plugin
  - serverless-python-requirements
  - serverless-domain-manager

custom:
  prune:
    automatic: true
    number: 3
  pythonRequirements:
    dockerizePip: true
  customDomain:
    domainName: ${ssm:/${self:service}-${sls:stage}/domain_name}
    stage: ${sls:stage}
    certificateArn: ${ssm:/${self:service}-${sls:stage}/certification_arn}
    endpointType: REGIONAL

resources:
  Resources:
    UnitemateTimeStreamDB:
      Type: AWS::Timestream::Database
      Properties:
        DatabaseName: ${self:service}-${sls:stage}
    UnitemateTimeStreamUserResultTable:
      Type: AWS::Timestream::Table
      Properties:
        DatabaseName: !Ref UnitemateTimeStreamDB
        TableName: origin_user_results-${sls:stage}
        RetentionProperties:
          MemoryStoreRetentionPeriodInHours: "1"
          MagneticStoreRetentionPeriodInDays: ${param:life_cycle_days}
        MagneticStoreWriteProperties:
          EnableMagneticStoreWrites: true
          MagneticStoreRejectedDataLocation: {}
    UnitemateTimeStreamProcessedOriginTable:
      Type: AWS::Timestream::Table
      Properties:
        DatabaseName: !Ref UnitemateTimeStreamDB
        TableName: processed-origin-${sls:stage}
        RetentionProperties:
          MemoryStoreRetentionPeriodInHours: "1"
          MagneticStoreRetentionPeriodInDays: ${param:life_cycle_days}
        MagneticStoreWriteProperties:
          EnableMagneticStoreWrites: true
          MagneticStoreRejectedDataLocation: {}
    UnitemateTimeStreamAggregationResultTable:
      Type: AWS::Timestream::Table
      Properties:
        DatabaseName: !Ref UnitemateTimeStreamDB
        TableName: aggregation-result-${sls:stage}
        RetentionProperties:
          MemoryStoreRetentionPeriodInHours: "1"
          MagneticStoreRetentionPeriodInDays: ${param:life_cycle_days}
        MagneticStoreWriteProperties:
          EnableMagneticStoreWrites: true
          MagneticStoreRejectedDataLocation: {}
    UnitemateS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-bucket-${sls:stage}
        AccessControl: Private
        PublicAccessBlockConfiguration:
          BlockPublicAcls: True
          BlockPublicPolicy: True
          IgnorePublicAcls: True
          RestrictPublicBuckets: True
        LifecycleConfiguration:
          Rules:
            - Id: ExpirationRule
              Status: Enabled
              ExpirationInDays: ${param:life_cycle_days}
    UnitemateSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-scheduled-query-topic-${sls:stage}

params:
  prd:
    life_cycle_days: "90"
    schedule_enabled: true
  dev:
    life_cycle_days: "2"
    schedule_enabled: false
